#docker-compose.yml

version: '3.8'

services:

  ollama:
    image: ollama/ollama:latest
    container_name: eass_ollama
    dns:
      - 8.8.8.8
    ports:
      - "11434:11434"
    volumes:
      - type: volume
        source: ollama_data
        target: /root/.ollama
      - type: bind
        source: ./ollama-entrypoint.sh
        target: /usr/local/bin/ollama-entrypoint.sh
    entrypoint: ["/usr/local/bin/ollama-entrypoint.sh"]
    restart: unless-stopped
    command: serve
    healthcheck:
      test: ["CMD", "sh", "-c", "timeout 1 bash -c '>/dev/tcp/localhost/11434' && exit 0 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    environment:
      - OLLAMA_HOST=http://0.0.0.0:11434
      - OLLAMA_ORIGINS=*

  mongo:
    image: mongo:6
    container_name: eass_mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - type: volume
        source: mongo_data
        target: /data/db
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 30s
  
  stock_data_fetching:
    build:
      context: .
      dockerfile: stock_data_fetching/Dockerfile
    working_dir: /app
    container_name: eass_stock_data
    ports:
      - "8002:8000"
    volumes:
      - type: bind
        source: ./stock_data_fetching
        target: /app/stock_data_fetching
        consistency: delegated
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "python3", "-c",
         "import sys, urllib.request as r; \
          sys.exit(0 if r.urlopen('http://localhost:8000/health').getcode()==200 else 1)"]
      interval: 60s
      timeout: 2s
      retries: 5
    restart: unless-stopped

  auth:
    build:
      context: .
      dockerfile: auth_service/Dockerfile
    working_dir: /app
    container_name: eass_auth
    volumes:
      - type: bind
        source: ./auth_service
        target: /app/auth_service
    ports:
      - "8001:8001"
    command: uvicorn auth_service.main:app --host 0.0.0.0 --port 8001
    depends_on:
      mongo:
        condition: service_healthy
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "python3", "-c",
         "import sys, urllib.request as r; \
          sys.exit(0 if r.urlopen('http://localhost:8001/health').getcode()==200 else 1)"]
      interval: 60s
      timeout: 2s
      retries: 5
      start_period: 10s

  llm_service:
    build:
      context: .
      dockerfile: llm_service/Dockerfile
    working_dir: /app
    container_name: eass_llm
    ports:
      - "8003:8003"
    volumes:
      - type: bind
        source: ./llm_service
        target: /app/llm_service
        consistency: delegated
    env_file:
      - .env
    depends_on:
      ollama:
        condition: service_healthy
    environment:
      - OLLAMA_API_URL=http://eass_ollama:11434/api/generate
      - OLLAMA_RETRY_ATTEMPTS=5
      - OLLAMA_RETRY_DELAY=10
    healthcheck:
      test: ["CMD", "python3", "-c",
         "import sys, urllib.request as r; \
          sys.exit(0 if r.urlopen('http://localhost:8003/health').getcode()==200 else 1)"]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: eass_nginx
    ports:
      - "80:80"
    depends_on:
      - auth
      - stock_data_fetching
      - llm_service

volumes:
  mongo_data:
  ollama_data:

